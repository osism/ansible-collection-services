import pytest

from ..util.util import get_ansible, get_variable

testinfra_runner, testinfra_hosts = get_ansible()


def test_netdata_package(host):
    package = host.package(get_variable(host, "netdata_package_name"))

    assert package.is_installed


def test_netdata_configuration_files(host):
    configuration_files = get_variable(host, "netdata_configuration_files")
    for file in configuration_files:
        config_file = host.file(f"/etc/netdata/{file}")

        assert config_file.exists
        assert config_file.user == "root"
        assert config_file.group == "root"
        assert config_file.mode == 0o644
        assert (
            "# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN"
            in config_file.content_string
        )


def test_netdata_opt_out_file(host):
    opt_out_file = host.file("/etc/netdata/.opt-out-from-anonymous-statistics")

    assert opt_out_file.exists
    assert not opt_out_file.is_directory
    assert opt_out_file.mode == 0o644
    assert opt_out_file.user == "root"
    assert opt_out_file.group == "root"


def test_netdata_user(host):
    netdata_user = host.user("netdata")

    assert "docker" in netdata_user.groups


def test_netdata_service(host):
    service_name = get_variable(host, "netdata_service_name")
    service = host.service(service_name)

    assert service.is_running


def test_netdata_host_type_server(host):
    if host.file(get_variable(host, "netdata_host_type")) == "server":
        sysctl_file_path = "/etc/sysctl.d/50-netdata.conf"
        assert host.file(sysctl_file_path).exists

        expected_value = get_variable(host, "netdata_sys_vm_max_map_count")
        actual_value = host.sysctl("vm.max_map_count")
        assert actual_value == expected_value

    else:
        pytest.skip("netdata_host_type is not server")


def test_netdata_host_type_client(host):
    if host.file(get_variable(host, "netdata_host_type")) == "client":
        assert True

    else:
        pytest.skip("netdata_host_type is not client")
