---
services:
  mariadb:
    restart: unless-stopped
    container_name: "{{ container_name.mariadb }}"
    image: "{{ zuul_mariadb_image }}"
    env_file: "{{ zuul_base_conf_dir }}/mariadb.env"
{% if zuul_mariadb_volume | length > 0 %}
    volumes:
      - "{{ zuul_mariadb_volume }}:/var/lib/mysql"
{% endif %}
  zookeeper:
    restart: unless-stopped
    container_name: "{{ container_name.zookeeper }}"
    image: "{{ zuul_zookeeper_image }}"
    hostname: {{ zuul_zookeeper_fqdn }}
    volumes:
      - "{{ zuul_component_conf_dirs.certs }}:/var/certs:z"
      - "{{ zuul_component_conf_dirs.zookeeper }}/zoo.cfg:/conf/zoo.cfg:z"
    command: zkServer.sh start-foreground
  nodepool_builder:
    restart: unless-stopped
    container_name: "{{ container_name.nodepool_builder }}"
    command: "/usr/local/bin/nodepool-builder -f -l /etc/nodepool/logging.conf"
    depends_on:
      - zookeeper
    env_file: "{{ zuul_base_conf_dir }}/nodepool_builder.env"
    image: "{{ zuul_nodepool_builder_image }}"
    privileged: true
    volumes:
      - "{{ zuul_component_conf_dirs.nodepool_builder }}:/etc/nodepool/:z"
      - "{{ zuul_component_conf_dirs.certs }}:/var/certs:z"
      - "/srv/dib_cache:/srv/dib_cache:rw"
      - "/srv/dib_tmp:/srv/dib_tmp:rw"
      - "/srv/nodepool:/srv/nodepool"
      - "/etc/openstack:/etc/openstack:ro"
      - "/var/log/nodepool:/var/log/nodepool:rw"
  nodepool_launcher:
    restart: unless-stopped
    container_name: "{{ container_name.nodepool_launcher }}"
    command: "/usr/local/bin/nodepool-launcher -f -l /etc/nodepool/logging.conf"
    depends_on:
      - zookeeper
    env_file: "{{ zuul_base_conf_dir }}/nodepool_launcher.env"
    image: "{{ zuul_nodepool_launcher_image }}"
    volumes:
      - "{{ zuul_component_conf_dirs.nodepool_launcher }}:/etc/nodepool/:z"
      - "{{ zuul_component_conf_dirs.certs }}:/var/certs:z"
      - "/etc/openstack:/etc/openstack:ro"
      - "/var/log/nodepool:/var/log/nodepool:rw"
  zuul_scheduler:
    restart: unless-stopped
    container_name: "{{ container_name.zuul_scheduler }}"
    depends_on:
      - zookeeper
      - mariadb
    env_file: "{{ zuul_base_conf_dir }}/scheduler.env"
    command: "sh -c '/wait-to-start.sh && zuul-scheduler -f'"
    image: "{{ zuul_scheduler_image }}"
    volumes:
      - "{{ zuul_component_conf_dirs.zuul }}:/etc/zuul/:z"
      - "{{ zuul_component_conf_dirs.ssh_keys }}:/var/ssh:z"
      - "{{ zuul_component_conf_dirs.certs }}:/var/certs:z"
      - "{{ zuul_component_conf_dirs.scheduler }}/wait-to-start.sh:/wait-to-start.sh:ro"
      - "/var/log/zuul:/var/log/zuul"
  zuul_web:
    restart: unless-stopped
    container_name: "{{ container_name.zuul_web }}"
    depends_on:
      - zuul_scheduler
      - mariadb
    ports:
      - "9000:9000"
    image: "{{ zuul_web_image }}"
    env_file: "{{ zuul_base_conf_dir }}/web.env"
    volumes:
      - "{{ zuul_component_conf_dirs.zuul }}:/etc/zuul/:z"
      - "{{ zuul_component_conf_dirs.certs }}:/var/certs:z"
      - "/var/log/zuul:/var/log/zuul"
  zuul_executor:
    restart: unless-stopped
    container_name: "{{ container_name.zuul_executor }}"
    privileged: true
    env_file: "{{ zuul_base_conf_dir }}/executor.env"
    depends_on:
      - zuul_scheduler
    image: "{{ zuul_executor_image }}"
    volumes:
      - "{{ zuul_component_conf_dirs.zuul }}:/etc/zuul/:z"
      - "{{ zuul_component_conf_dirs.ssh_keys }}:/var/ssh:z"
      - "{{ zuul_component_conf_dirs.certs }}:/var/certs:z"
      - "{{ zuul_log_volume }}:/srv/static/logs:z"
      - "/var/log/zuul:/var/log/zuul"
  log_server:
    restart: unless-stopped
    container_name: "{{ container_name.log_server }}"
    image: "{{ zuul_log_server_image }}"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "{{ zuul_component_conf_dirs.log_server }}:/usr/local/apache2/conf:ro"
      - "{{ zuul_log_volume }}:/usr/local/apache2/htdocs:z"
{% if not zuul_log_volume.startswith('/') %}

volumes:
  {{ zuul_log_volume }}:
{% endif %}
