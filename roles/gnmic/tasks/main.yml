---
- name: Set _gnmic_targets fact
  ansible.builtin.set_fact:
    _gnmic_targets: "{{ lookup('community.general.merge_variables', '^gnmic_targets__.+$', initial_value=gnmic_targets, groups=gnmic_targets_groups) }}"  # yamllint disable-line rule:line-length

- name: Set _gnmic_subscriptions fact
  ansible.builtin.set_fact:
    _gnmic_subscriptions: "{{ lookup('community.general.merge_variables', '^gnmic_subscriptions__.+$', initial_value=gnmic_subscriptions, groups=gnmic_subscriptions_groups) }}"  # yamllint disable-line rule:line-length

- name: Set _gnmic_outputs fact
  ansible.builtin.set_fact:
    _gnmic_outputs: "{{ lookup('community.general.merge_variables', '^gnmic_outputs__.+$', initial_value=gnmic_outputs, groups=gnmic_outputs_groups) }}"  # yamllint disable-line rule:line-length

- name: Create required directories
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0755
  loop:
    - "{{ gnmic_docker_compose_directory }}"
    - "{{ gnmic_configuration_directory }}"

- name: Copy gnmic.yaml file
  ansible.builtin.template:
    src: gnmic.yaml.j2
    dest: "{{ gnmic_configuration_directory }}/gnmic.yaml"
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0640
  notify: Restart gnmic service

- name: Copy docker-compose.yml file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ gnmic_docker_compose_directory }}/docker-compose.yml"
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0640
  notify: Restart gnmic service

- name: Manage gnmic service
  become: true
  ansible.builtin.service:
    name: "{{ gnmic_service_name }}"
    state: started
    enabled: true
  register: result
  until: result["status"]["ActiveState"] == "active"
  retries: 10
  delay: 20
