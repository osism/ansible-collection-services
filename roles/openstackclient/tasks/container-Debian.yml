---
- name: Gather the apt package facts
  package_facts:
    manager: auto

- name: Create required directories
  become: true
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0750
  loop:
    - "{{ openstackclient_configuration_directory }}"
    - "{{ openstackclient_data_directory }}"
    - "{{ openstackclient_docker_compose_directory }}"

- name: Copy docker-compose.yml file
  template:
    src: docker-compose.yml.j2
    dest: "{{ openstackclient_docker_compose_directory }}/docker-compose.yml"
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0640

- name: Run service
  docker_compose:
    project_src: "{{ openstackclient_docker_compose_directory }}"
    build: false
    pull: true
    remove_orphans: true
  when: "'docker-compose' in ansible_facts.packages"

# NOTE: If docker-compose was not installed by package, the Python bindings are not available.
#       Therefore in this case docker-compose is called directly.

- name: Pull images
  command: "docker-compose -f {{ openstackclient_docker_compose_directory }}/docker-compose.yml pull"
  register: result
  changed_when: ('Downloaded' in result.stdout)
  when: "'docker-compose' not in ansible_facts.packages"

- name: Run service
  command: "docker-compose -f {{ openstackclient_docker_compose_directory }}/docker-compose.yml up -d --remove-orphans --no-build"
  register: result
  changed_when: ('Creating' in result.stdout or 'Recreating' in result.stdout)
  when: "'docker-compose' not in ansible_facts.packages"

- name: Copy wrapper scripts
  become: true
  template:
    src: "wrapper/{{ item }}.j2"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
  loop:
    - openstack
    - ospurge

- name: Copy bash completion script
  become: true
  command: "docker cp {{ openstackclient_container_name }}:/osc.bash_completion /etc/bash_completion.d/openstack"
  register: result
  changed_when: false
  failed_when: result.rc != 0
