#!/usr/bin/env bash

# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

ANSIBLE_COLLECTION_SERVICES_VERSION=${ANSIBLE_COLLECTION_SERVICES_VERSION:-main}
ANSIBLE_PLAYBOOKS_MANAGER_VERSION=${ANSIBLE_PLAYBOOKS_MANAGER_VERSION:-main}
ANSIBLE_USER=${ANSIBLE_USER:-dragon}
ANSIBLE_VERSION=${ANSIBLE_VERSION:-ansible==7.5.0}
INSTALL_ANSIBLE_ROLES=${INSTALL_ANSIBLE_ROLES:-true}
MANAGER_VERSION=${MANAGER_VERSION:-main}
NETADDR_VERSION=${NETADDR_VERSION:-netaddr==0.8.0}
PLAYBOOK=${PLAYBOOK:-manager}
VENV_PATH=${VENV_PATH:-.venv}

CONTAINER=${CONTAINER:-false}
CONTAINER_IMAGE=${CONTAINER_IMAGE:-osism/seed}
CONTAINER_REGISTRY=${CONTAINER_REGISTRY:-quay.io}
CONTAINER_TAG=${CONTAINER_TAG:-latest}

if [[ $CONTAINER == "true" ]]; then
    docker run --rm -v {{ configuration_directory }}:/opt/configuration:ro -it $CONTAINER_REGISTRY/$CONTAINER_IMAGE:$CONTAINER_TAG $PLAYBOOK
    exit 0
fi

pushd {{ configuration_directory }}/environments/manager > /dev/null

if [[ ! -x "$(command -v ansible-playbook)" ]]; then
    if [[ ! -e $VENV_PATH ]]; then

        if [[ ! -x "$(command -v virtualenv)" ]]; then
            sudo apt-get install -y virtualenv
        fi

        virtualenv -p python3 $VENV_PATH
        source $VENV_PATH/bin/activate
        pip3 install --no-cache-dir "$ANSIBLE_VERSION" "$NETADDR_VERSION"
    else
        source $VENV_PATH/bin/activate
    fi
fi

if [[ $INSTALL_ANSIBLE_ROLES == "true" ]]; then
    ansible-galaxy collection install -f git+https://github.com/osism/ansible-collection-services,$ANSIBLE_COLLECTION_SERVICES_VERSION
    ansible-galaxy collection install -f git+https://github.com/osism/ansible-playbooks-manager,$ANSIBLE_PLAYBOOKS_MANAGER_VERSION
fi

if [[ $PLAYBOOK == "netbox" || $PLAYBOOK == "traefik" ]]; then

    ansible-playbook \
        --private-key /opt/ansible/secrets/id_rsa.operator \
        -i {{ configuration_directory }}/inventory \
        -e @{{ configuration_directory }}/environments/infrastructure/images.yml \
        -e @{{ configuration_directory }}/environments/infrastructure/configuration.yml \
        -e @{{ configuration_directory }}/environments/infrastructure/secrets.yml \
        -e @{{ configuration_directory }}/environments/images.yml \
        -e @{{ configuration_directory }}/environments/configuration.yml \
        -e @{{ configuration_directory }}/environments/secrets.yml \
        -e @images.yml \
        -e @configuration.yml \
        -e @secrets.yml \
        -u $ANSIBLE_USER \
        osism.manager.$PLAYBOOK "$@"

else

    ansible-playbook \
        --private-key /opt/ansible/secrets/id_rsa.operator \
        -i {{ configuration_directory }}/inventory \
        -e @{{ configuration_directory }}/environments/images.yml \
        -e @{{ configuration_directory }}/environments/configuration.yml \
        -e @{{ configuration_directory }}/environments/secrets.yml \
        -e @images.yml \
        -e @configuration.yml \
        -e @secrets.yml \
        -u $ANSIBLE_USER \
        osism.manager.$PLAYBOOK "$@"

    osism reconciler sync

fi

popd > /dev/null
