###############################################################################
# AWX settings file
###############################################################################

import os


def read_secret(secret_name):
    try:
        f = open('/run/secrets/' + secret_name, 'r', encoding='utf-8')
    except EnvironmentError:
        return ''
    else:
        with f:
            return f.readline().strip()


###############################################################################
# GENERIC
###############################################################################

ADMINS = ()

JOBOUTPUT_ROOT = '/var/lib/awx/job_status'
PROJECTS_ROOT = '/opt/ansible'
STATIC_ROOT = '/var/lib/awx/public/static'

SECRET_KEY = read_secret('TOWER_SECRET_KEY')

ALLOWED_HOSTS = ['*']

CLUSTER_HOST_ID = "awx"

CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False

# Container environments don't like chroots
AWX_PROOT_ENABLED = False

USE_X_FORWARDED_HOST = True
USE_X_FORWARDED_PORT = True

###############################################################################
# EMAIL SETTINGS
###############################################################################

SERVER_EMAIL = 'root@localhost'
DEFAULT_FROM_EMAIL = 'webmaster@localhost'
EMAIL_SUBJECT_PREFIX = '[AWX] '

EMAIL_HOST = 'localhost'
EMAIL_PORT = 25
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = False

###############################################################################
# LOGGING
###############################################################################

LOGGING['handlers']['console'] = {
    '()': 'logging.StreamHandler',
    'level': 'DEBUG',
    'formatter': 'simple',
}

LOGGING['loggers']['django.request']['handlers'] = ['console']
LOGGING['loggers']['rest_framework.request']['handlers'] = ['console']
LOGGING['loggers']['awx']['handlers'] = ['console', 'external_logger']
LOGGING['loggers']['awx.main.commands.run_callback_receiver']['handlers'] = ['console']
LOGGING['loggers']['awx.main.tasks']['handlers'] = ['console', 'external_logger']
LOGGING['loggers']['awx.main.scheduler']['handlers'] = ['console', 'external_logger']
LOGGING['loggers']['django_auth_ldap']['handlers'] = ['console']
LOGGING['loggers']['social']['handlers'] = ['console']
LOGGING['loggers']['system_tracking_migrations']['handlers'] = ['console']
LOGGING['loggers']['rbac_migrations']['handlers'] = ['console']
LOGGING['loggers']['awx.isolated.manager.playbooks']['handlers'] = ['console']
LOGGING['handlers']['callback_receiver'] = {'class': 'logging.NullHandler'}
LOGGING['handlers']['task_system'] = {'class': 'logging.NullHandler'}
LOGGING['handlers']['tower_warnings'] = {'class': 'logging.NullHandler'}
LOGGING['handlers']['rbac_migrations'] = {'class': 'logging.NullHandler'}
LOGGING['handlers']['system_tracking_migrations'] = {'class': 'logging.NullHandler'}
LOGGING['handlers']['management_playbooks'] = {'class': 'logging.NullHandler'}

###############################################################################
# OTHER
###############################################################################

{% for key, value in awx_configuration|dictsort -%}
{% if value is sameas false %}
{{ key }} = False
{% elif value is sameas true %}
{{ key }} = True
{% elif value is string %}
{{ key }} = '{{ value }}'
{% elif value is number %}
{{ key }} = {{ value }}
{% endif %}
{% endfor -%}
