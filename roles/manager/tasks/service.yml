---
- name: Create traefik external network
  community.docker.docker_network:
    name: "{{ traefik_external_network_name }}"
    ipam_config:
      - subnet: "{{ traefik_external_network_cidr }}"
  when: ara_server_traefik|bool

- name: Copy docker-compose.yml file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ manager_docker_compose_directory }}/docker-compose.yml"
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0640
  notify: Restart manager service

- name: Ensure that the manager service is up and running
  block:  # noqa osism-fqcn
    - name: Start/enable manager service
      become: true
      ansible.builtin.service:
        name: "{{ manager_service_name }}"
        state: started
        enabled: true
  rescue:
    # Compose is not always reliable when starting services. Therefore,
    # in case of an error at startup, another stop and start of the
    # service is tried here.
    - name: Stop manager service
      become: true
      ansible.builtin.service:
        name: "{{ manager_service_name }}"
        state: stopped

    - name: Do a manual start of the manager service
      ansible.builtin.command: "/usr/bin/docker compose --project-directory {{ manager_docker_compose_directory }} up -d --remove-orphans"
      changed_when: true

    # This does not change anything on the service side, but the unit is
    # then in the expected state.
    - name: Start manager service again
      become: true
      ansible.builtin.service:
        name: "{{ manager_service_name }}"
        state: started

# NOTE: The command returns a list of IDs of containers from the manager service
#       that are currently starting or unhealthy. As long as the list is not empty
#       the manager service is not in a good state.
- name: Wait for an healthy manager service
  ansible.builtin.shell: |
    set -o pipefail
    bash -c '{ docker ps -aq \
                --filter "label=com.docker.compose.project=manager" \
                --filter "health=starting" && \
               docker ps -aq \
                --filter "label=com.docker.compose.project=manager" \
                --filter "health=unhealthy"; }' | \
    sort | uniq -u
  args:
    executable: /bin/bash
  register: result
  changed_when: false
  until: "result.stdout | length == 0"
  # NOTE: Netbox availability sometimes takes a long time. Since the inventory
  #       reconciler is only healthy when the Netbox is usable, a very long wait
  #       (1000 seconds) is intentionally made here.
  retries: 50
  delay: 20
  tags:
    - wait-for-an-healthy-manager-service

- name: Copy osismclient bash completion script
  become: true
  ansible.builtin.shell:
    cmd: "INTERACTIVE=false osism complete >> /etc/bash_completion.d/osism"
    creates: /etc/bash_completion.d/osism
  register: result
  changed_when: false
  failed_when: result.rc != 0
  when: enable_celery|bool
