---
- name: Restart manager service
  become: true
  ansible.builtin.service:
    name: "{{ manager_service_name }}"
    state: restarted
  when: manager_service_restart|bool
  notify:
    - Wait for an healthy manager service
    - Register that manager service was restarted

# NOTE: This handler prevents a 2nd manager restart in the
#       osism.manager.manager playbook.
- name: Register that manager service was restarted
  ansible.builtin.set_fact:
    manager_service_restart: false

# NOTE: The command returns a list of IDs of containers from the manager service
#       that are currently starting or unhealthy. As long as the list is not empty
#       the manager service is not in a good state.
- name: Wait for an healthy manager service
  ansible.builtin.shell: |
    set -o pipefail
    bash -c '{ docker ps -aq \
                --filter "label=com.docker.compose.project=manager" \
                --filter "health=starting" && \
               docker ps -aq \
                --filter "label=com.docker.compose.project=manager" \
                --filter "status=created" && \
               docker ps -aq \
                --filter "label=com.docker.compose.project=manager" \
                --filter "health=unhealthy"; }' | \
    sort | uniq -u
  args:
    executable: /bin/bash
  register: result
  changed_when: false
  until: "result.stdout | length == 0"
  # NOTE: Netbox availability sometimes takes a long time. Since the inventory
  #       reconciler is only healthy when the Netbox is usable, a very long wait
  #       (1000 seconds) is intentionally made here.
  retries: 50
  delay: 20

- name: Copy osismclient bash completion script
  become: true
  ansible.builtin.shell:
    cmd: "INTERACTIVE=false osism complete > /etc/bash_completion.d/osism"
  register: result
  changed_when: false
  failed_when: result.rc != 0
  when: enable_celery|bool
