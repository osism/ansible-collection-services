---
- name: Copy nexus systemd unit file
  become: true
  ansible.builtin.template:
    src: nexus.service.j2
    dest: "/etc/systemd/system/nexus.service"
    mode: 0644
    owner: root
    group: root
  register: nexus_systemd_unit_file

- name: Create traefik external network
  community.docker.docker_network:
    name: "{{ traefik_external_network_name }}"
    ipam_config:
      - subnet: "{{ traefik_external_network_cidr }}"
  when: nexus_traefik|bool

- name: Copy docker-compose.yml file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ nexus_docker_compose_directory }}/docker-compose.yml"
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0640
  notify: Restart nexus service

- name: "Stop and disable old service {{ nexus_old_service_name }}"
  become: true
  ansible.builtin.systemd_service:
    name: "{{ nexus_old_service_name }}"
    state: stopped
    enabled: false

- name: Manage nexus service
  become: true
  ansible.builtin.systemd_service:
    name: "{{ nexus_service_name }}"
    state: started
    enabled: true
    daemon_reload: "{{ nexus_systemd_unit_file.changed }}"
  register: nexus_service
  notify: Wait for nexus service to start

- name: Register that nexus service was started
  ansible.builtin.set_fact:
    _nexus_service_restart: false
  when: nexus_service.changed  # noqa no-handler

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
