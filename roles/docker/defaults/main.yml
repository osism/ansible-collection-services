---
apt_cache_valid_time: 3600

##########################
# generic

docker_debug: "false"
docker_experimental: "false"
docker_live_restore: "true"
docker_user: "{{ operator_user | default('dragon') }}"
docker_group: "{{ operator_group | default('dragon') }}"

##########################
# restart

docker_allow_restart: true
docker_enforce_restart: false
docker_ignore_restart_groupname: manager

##########################
# networking

docker_ipv6: "false"
docker_disable_default_network: false

##########################
# logging

docker_log_driver: "json-file"
docker_log_level: info
docker_log_opts:
  max-size: 10m
  max-file: 3

##########################
# hosts

docker_hosts_defaults:
  - "unix:///var/run/docker.sock"
docker_hosts_extra: []
docker_hosts: "{{ docker_hosts_defaults + docker_hosts_extra }}"

##########################
# services

docker_service_name: docker
containerd_service_name: containerd

##########################
# packages

docker_package_name: docker-ce
docker_cli_package_name: "{{ docker_package_name }}-cli"
containerd_package_name: containerd.io

# NOTE: By default this role uses the packages from Docker itself. Therefore the
#       packages of Ubuntu must not be installed.
#
#       To use the packages of Ubuntu the following parameters have to be adjusted.
#       The repository of Docker should then also not be included
#
#       docker_package_name: docker.io
#       containerd_package_name: containerd
#       docker_packages_fail: []

docker_packages_fail:
  - containerd
  - docker.io

##########################
# python package

docker_python3_package_name: python3-docker
docker_python_package_name: python-docker
docker_python_package_names:
  - "{{ docker_python3_package_name }}"
  - "{{ docker_python_package_name }}"

docker_python_install_from_pip: "{{ ansible_distribution_release == 'xenial' }}"
docker_pip_package_name: docker
docker_pip_extra_args: ""

##########################
# version

# NOTE: This "5:" must be prepended starting with version 18.09.
#       Check available version under Ubuntu with apt-cache madison docker-ce.
# renovate: datasource=docker depName=docker
docker_version: '5:20.10.20'

##########################
# registry

# docker_registry_password:
# docker_registry_username:

docker_registry: index.docker.io
docker_registry_docker_openpolicyagent: "{{ docker_registry }}"

docker_insecure_registries: []
docker_registry_mirrors: []

##########################
# storage driver

# NOTE: overlay2 is the default choice for Docker CE
docker_storage_driver: overlay2

##########################
# storage block device

docker_configure_storage_block_device: false

docker_storage_block_device: /dev/sdb
docker_storage_filesystem: ext4
docker_storage_force: false

##########################
# proxy

docker_configure_proxy: false

docker_proxy_http: "http://proxy.tld:8080"
docker_proxy_https: "{{ docker_proxy_http }}"

docker_proxy_no_proxy_default:
  - localhost
  - 127.0.0.1
docker_proxy_no_proxy_extra: []
docker_proxy_no_proxy: "{{ docker_proxy_no_proxy_default + docker_proxy_no_proxy_extra }}"

##########################
# repository

docker_configure_repository: true

docker_debian_repository_arch: amd64
docker_debian_repository_key: https://download.docker.com/linux/ubuntu/gpg
docker_debian_repository: "deb [ arch={{ docker_debian_repository_arch }} ] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"

##########################
# network

# docker_default_address_pools:
#   - scope: local
#     base: 10.10.0.0/16
#     size: 24
#   - scope: global
#     base: 10.20.0.0/16
#     size: 24

##########################
# runtime

docker_default_runtime: runc

##########################
# dragonfly

docker_dragonfly: false

##########################
# policies

docker_policies: false

docker_openpolicyagent_tag: '0.8'
docker_openpolicyagent_image: "{{ docker_registry_docker_openpolicyagent }}/openpolicyagent/opa-docker-authz-v2:{{ docker_openpolicyagent_tag }}"

docker_authorization_plugins_defaults:
  - "{{ docker_openpolicyagent_image }}"
docker_authorization_plugins_extra: []

docker_authorization_plugins: "{{ docker_authorization_plugins_defaults + docker_authorization_plugins_extra }}"

docker_policy_files_defaults:
  - default.rego
docker_policy_files_extra: []
docker_policy_files: "{{ docker_policy_files_defaults + docker_policy_files_extra }}"

docker_policy_allowed_registries_defaults:
  - index.docker.io
  - quay.io
docker_policy_allowed_registries_extra: []
docker_policy_allowed_registries: "{{ docker_policy_allowed_registries_defaults + docker_policy_allowed_registries_extra + docker_insecure_registries}}"

##########################
# zun

docker_zun: false

docker_zun_hosts:
  - tcp://{{ api_interface_address | default('api' | osism.services.kolla_address) | osism.services.put_address_in_context('url') }}:2375
docker_zun_opts:
  cluster-store: etcd://{% for host in groups.get('etcd', []) %}{{ 'api' | osism.services.kolla_address(host) | osism.services.put_address_in_context('url') }}:{{ hostvars[host]['etcd_client_port'] }}{% if not loop.last %},{% endif %}{% endfor %}

docker_zun_cni_version: '0.3.1'
docker_cni_config_dir: /etc/cni/net.d
docker_cni_bin_dir: /opt/cni/bin

##########################
# containerd

containerd_grpc_gid: 42463

##########################
# other options

# https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file
docker_opts: {}

##########################
# facts

docker_fact_files:
  - docker_containers
  - docker_images
