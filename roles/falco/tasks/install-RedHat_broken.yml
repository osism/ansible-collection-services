---
# The falco kernel module does not compile with kernel versions
# provided by centos. Therefore falco can currently not be deployed.
# This file is checked in for future reference

- name: Install EPEL repository
  become: true
  ansible.builtin.dnf:
    name: epel-release
    state: present
  changed_when: true
  when: falco_configure_repository|bool

- name: Enable EPEL repository
  become: true
  ansible.builtin.command:
    cmd: dnf config-manager --set-enabled epel
  changed_when: true
  when: falco_configure_repository|bool

- name: Install yum utilities
  become: true
  ansible.builtin.yum:
    name: yum-utils
    state: present

- name: Install dkms utilities
  become: true
  ansible.builtin.yum:
    name: "{{ item }}"
    state: present
  loop:
    - dkms
    - "kernel-devel-{{ ansible_kernel }}"

- name: Add Falco GPG key
  become: true
  ansible.builtin.rpm_key:
    state: present
    key: "{{ falco_repository_key }}"
  changed_when: true
  when: falco_configure_repository|bool

- name: Install Falco repository
  become: true
  ansible.builtin.command: "yum-config-manager --add-repo {{ falco_redhat_repository }}"
  changed_when: true
  when: falco_configure_repository|bool

- name: Update package cache
  become: true
  ansible.builtin.command: dnf makecache
  changed_when: true
  when: falco_configure_repository|bool

- name: "Install package {{ falco_package_name }}"
  become: true
  ansible.builtin.dnf:
    name: "{{ falco_package_name }}"
    state: present
  notify: "Restart service {{ falco_service_name }}"

- name: Specify driver type with falcoctl
  become: true
  ansible.builtin.command:
    cmd: "falcoctl driver config --type kmod"
  notify: "Restart service {{ falco_service_name }}"
  changed_when: true

- name: Install falco driver
  become: true
  ansible.builtin.command:
    cmd: "falcoctl driver install"
  changed_when: true

- name: Symlink kernel modules
  become: true
  ansible.builtin.shell:
    cmd: |
      ln -s /root/.falco/*/x86_64/falco_*.ko /lib/modules/$(uname -r)/falco.ko
      depmod
  notify: "Restart service {{ falco_service_name }}"
  changed_when: true

- name: Check if /var/run/reboot-required exist
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: result

- name: Print message if /var/run/reboot-required exist
  ansible.builtin.debug:
    msg: "Reboot of {{ inventory_hostname }} required to get the latest kernel running"
  when: result.stat.islnk is defined

- name: Persist falco kernel module via modules-load.d
  become: true
  ansible.builtin.copy:
    content: falco
    dest: /etc/modules-load.d/falco.conf
    owner: root
    group: root
    mode: 0644

- name: Load falco kernel module
  become: true
  community.general.modprobe:
    name: falco
    state: present

- name: "Start/enable service {{ falco_service_name }}"
  become: true
  ansible.builtin.service:
    name: "{{ falco_service_name }}"
    state: started
    enabled: true
