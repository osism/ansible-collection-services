---
##########################
# configuration

configuration_directory: /opt/configuration

##########################
# operator

operator_user: dragon
operator_group: "{{ operator_user }}"

##########################
# docker

docker_network_mtu: 1500

docker_registry_netbox: quay.io
docker_registry_postgres: index.docker.io
docker_registry_redis: index.docker.io

##########################
# netbox

netbox_required_packages:
  - jq

netbox_configuration_directory: /opt/netbox/configuration
netbox_secrets_directory: /opt/netbox/secrets
netbox_docker_compose_directory: /opt/netbox

netbox_network: 172.31.100.176/28
netbox_old_service_name: "docker-compose@netbox"
netbox_service_name: "netbox"

netbox_host: 127.0.0.1
netbox_port: 8121

netbox_osism_api_host: "{{ netbox_host }}"
netbox_osism_api_port: 8000

netbox_user: 'unit:root'

# renovate: datasource=docker depName=quay.io/osism/netbox
netbox_tag: 'v4.0.11'
netbox_image: "{{ docker_registry_netbox }}/osism/netbox:{{ netbox_tag }}"

# SECRET_KEY must be at least 50 characters in length.
netbox_secret_key: "00000000000000000000000000000000000000000000000000"

netbox_superuser_name: admin
netbox_superuser_email: netbox@osism.local
netbox_superuser_password: password
netbox_superuser_api_token: "0000000000000000000000000000000000000000"

netbox_user_name: dragon
netbox_user_api_token: "1111111111111111111111111111111111111111"

netbox_ldap_enable: false
netbox_ldap_server_uri: "ldap://localhost:389"
netbox_ldap_bind_dn: ""
netbox_ldap_bind_password: ""
netbox_ldap_user_dn_template:
netbox_ldap_user_search_attr: "sAMAccountName"
netbox_ldap_user_search_basedn: ""
netbox_ldap_group_search_class: "group"
netbox_ldap_group_search_basedn: ""
netbox_ldap_group_type: "NestedGroupOfNamesType"

netbox_ldap_require_group_dn:
netbox_ldap_is_admin_dn:
netbox_ldap_is_superuser_dn:

netbox_ldap_start_tls: false
netbox_ldap_ignore_cert_errors: false
netbox_ldap_mirror_groups: false
netbox_ldap_find_group_perms: true
netbox_ldap_cache_timeout: 3600

netbox_metrics: "True"
netbox_max_db_wait_time: 90

netbox_extra: {}
# BASE_PATH: netbox/
# RELEASE_CHECK_URL: https://api.github.com/repos/netbox-community/netbox/releases

netbox_plugins_defaults:
  - netbox_initializers
netbox_plugins_extra: []
#   - netbox_bgp
#   - netbox_dns
#   - netbox_plugin_osism
#   - nextbox_ui_plugin
netbox_plugins: "{{ netbox_plugins_defaults + netbox_plugins_extra }}"

netbox_plugins_config_osism:
  grafana: "http://{{ kolla_internal_vip_address | default('127.0.0.1') }}:3000"
  netdata: "http://{{ netdata_api_host | default('127.0.0.1') }}:19999"

netbox_plugins_config:
  netbox_plugin_osism: "{{ netbox_plugins_config_osism }}"

##########################
# postgres

# renovate: datasource=docker depName=postgres
postgres_tag: '16.4-alpine'
postgres_image: "{{ docker_registry_postgres }}/library/postgres:{{ postgres_tag }}"

netbox_postgres_password: password
netbox_postgres_username: netbox
netbox_postgres_databasename: netbox

netbox_postgres_volume_type: volume

netbox_postgres_init_sql: "{{ configuration_directory }}/environments/infrastructure/files/netbox/init.sql"

##########################
# redis

# renovate: datasource=docker depName=redis
netbox_redis_tag: '7.4.0-alpine'
netbox_redis_image: "{{ docker_registry_redis }}/library/redis:{{ netbox_redis_tag }}"

##########################
# traefik

netbox_traefik: false

traefik_external_network_name: traefik
traefik_external_network_cidr: 172.31.254.0/24

##############
# initializers

netbox_init: true

netbox_initializers:
  - custom_fields
  - device_roles
  - device_types
  - groups
  - manufacturers
  - object_permissions
  - prefix_vlan_roles
  - sites
  - tags
  - users

netbox_init_object_permissions:
  read_write_all:
    enabled: true
    description: 'Read/Write all objects'
    object_types: all
    actions:
      - add
      - change
      - delete
      - view
    groups:
      - netbox-writers
  read_all:
    enabled: true
    description: 'Read all objects'
    object_types: all
    actions:
      - view
    groups:
      - netbox-readers

netbox_init_groups:
  netbox-writers:
    users:
      - "{{ netbox_user_name }}"
  netbox-readers:
    users: []

netbox_init_users_template: "{'{{ netbox_user_name }}': {'api_token': '{{ netbox_user_api_token }}'}}"
netbox_init_users: "{{ netbox_init_users_template }}"
