---
version: '3.5'

services:
  postgres:
    image: "{{ postgres_image }}"
    restart: unless-stopped
    env_file:
      - "{{ netbox_configuration_directory }}/postgres.env"
    volumes:
      - "{{ netbox_configuration_directory }}/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro"
      - postgres:/var/lib/postgresql/data
    secrets:
      - POSTGRES_PASSWORD
    healthcheck:
      test: pg_isready -U postgres

  redis:
    restart: unless-stopped
    image: "{{ redis_image }}"
    command: redis-server --appendonly yes
    volumes:
      - "redis:/data"
    healthcheck:
      test: redis-cli ping

  netbox: &netbox
    image: "{{ netbox_image }}"
    restart: unless-stopped
    user: "{{ netbox_userid }}"
    env_file:
      - "{{ netbox_configuration_directory }}/netbox.env"
    depends_on:
      - postgres
      - redis
    volumes:
      - "{{ netbox_configuration_directory }}/configuration.py:/etc/netbox/config/configuration.py:ro"
      - "{{ netbox_configuration_directory }}/nginx-unit.json:/etc/unit/nginx-unit.json:ro"
      - "{{ netbox_configuration_directory }}/initializers:/opt/netbox/initializers:ro"
      # NOTE: Workaround until script is available upstream
      - "{{ netbox_configuration_directory }}/startup-scripts/270_tags.py:/opt/netbox/startup_scripts/270_tags.py:ro"
    secrets:
      - NETBOX_POSTGRES_PASSWORD
      - NETBOX_SECRET_KEY
    healthcheck:
      test: curl -s -k http://127.0.0.1:8080/metrics
      start_period: 120s
{% if not netbox_traefik|bool %}
    ports:
      - "{{ netbox_host }}:{{ netbox_port }}:8080"
{% else %}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ traefik_external_network_name }}"
      - "traefik.http.middlewares.netbox-redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.netbox-redirect-to-https.redirectscheme.permanent=true"
      - "traefik.http.routers.netbox.entrypoints=http"
      - "traefik.http.routers.netbox.rule=Host(`{{ netbox_host }}`)"
      - "traefik.http.routers.netbox.middlewares=netbox-redirect-to-https@docker"
      - "traefik.http.services.netbox-secure.loadbalancer.server.port=8080"
      - "traefik.http.routers.netbox-secure.entrypoints=https"
      - "traefik.http.routers.netbox-secure.tls=true"
      - "traefik.http.routers.netbox-secure.rule=Host(`{{ netbox_host }}`)"
    networks:
      - default
      - {{ traefik_external_network_name }}
{% endif %}

  netbox-worker:
    <<: *netbox
    depends_on:
      - netbox
      - redis
    entrypoint: /opt/netbox/venv/bin/python /opt/netbox/netbox/manage.py
    command: rqworker
    ports: []
    healthcheck: {}
{% if netbox_traefik|bool %}
    labels: []
{% endif %}

volumes:
  postgres:
  redis:

secrets:
  NETBOX_POSTGRES_PASSWORD:
    file: {{ netbox_secrets_directory }}/NETBOX_POSTGRES_PASSWORD
  NETBOX_SECRET_KEY:
    file: {{ netbox_secrets_directory }}/NETBOX_SECRET_KEY
  NETBOX_TOKEN:
    file: {{ netbox_secrets_directory }}/NETBOX_TOKEN
  POSTGRES_PASSWORD:
    file: {{ netbox_secrets_directory }}/POSTGRES_PASSWORD

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: {{ docker_network_mtu }}
    ipam:
      driver: default
      config:
        - subnet:  {{ netbox_network }}
{% if netbox_traefik|bool %}
  {{ traefik_external_network_name }}:
    external: true
{% endif %}
