---
version: '3.5'
  postgres:
    image: "{{ netbox_postgres_image }}"
    restart: unless-stopped
    env_file:
      - "{{ netbox_configuration_directory }}/postgres.env"
    volumes:
      - "{{ netbox_configuration_directory }}/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro"
      - postgres:/var/lib/postgresql/data
    secrets:
      - POSTGRES_PASSWORD
    healthcheck:
      test: pg_isready -U postgres

  redis:
    restart: unless-stopped
    image: "{{ netbox_redis_image }}"
    command: redis-server --appendonly yes
    volumes:
      - "redis:/data"
    healthcheck:
      test: redis-cli ping

  netbox: &netbox
    image: "{{ netbox_image }}"
    restart: unless-stopped
    user: "{{ netbox_userid }}"
    env_file:
      - "{{ netbox_configuration_directory }}/netbox.env"
    depends_on:
      - postgres
      - redis
    volumes:
      - "{{ netbox_configuration_directory }}/configuration.py:/etc/netbox/config/configuration.py:ro"
      - "{{ netbox_configuration_directory }}/gunicorn_config.py:/etc/netbox/config/gunicorn_config.py:ro"
      - "{{ netbox_configuration_directory }}/initializers:/opt/netbox/initializers:ro"
      # NOTE: Workaround until script is available upstream
      - "{{ netbox_configuration_directory }}/startup-scripts/270_tags.py:/opt/netbox/startup_scripts/270_tags.py:ro"
      - netbox-nginx-config:/etc/netbox-nginx:rw
      - netbox-static-files:/opt/netbox/netbox/static:rw
      - netbox-media-files:/opt/netbox/netbox/media:rw
    secrets:
      - NETBOX_POSTGRES_PASSWORD
      - NETBOX_SECRET_KEY

  netbox-worker:
    <<: *netbox
    depends_on:
      - netbox
      - redis
    entrypoint: python3 /opt/netbox/netbox/manage.py
    command: rqworker

  netbox-nginx:
    image: "{{ netbox_nginx_image }}"
    restart: unless-stopped
    command: nginx -c /etc/netbox-nginx/nginx.conf
    depends_on:
      - netbox
    ports:
      - "{{ netbox_host }}:{{ netbox_port }}:8080"
    volumes:
      - netbox-static-files:/opt/netbox/netbox/static:ro
      - netbox-nginx-config:/etc/netbox-nginx/:ro
    healthcheck:
      test: curl --silent --fail http://localhost:8080

volumes:
  postgres:
  netbox-nginx-config:
  netbox-static-files:
  netbox-media-files:

secrets:
  NETBOX_POSTGRES_PASSWORD:
    file: {{ netbox_secrets_directory }}/NETBOX_POSTGRES_PASSWORD
  NETBOX_SECRET_KEY:
    file: {{ netbox_secrets_directory }}/NETBOX_SECRET_KEY
  NETBOX_TOKEN:
    file: {{ netbox_secrets_directory }}/NETBOX_TOKEN
  POSTGRES_PASSWORD:
    file: {{ netbox_secrets_directory }}/POSTGRES_PASSWORD

networks:
 default:
   driver: bridge
   ipam:
     driver: default
     config:
       - subnet:  {{ netbox_network }}
