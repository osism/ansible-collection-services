---
- name: Wait for apt lock
  become: true
  shell: "while fuser /var/lib/dpkg/{{ item }} >/dev/null 2>&1; do sleep 5; done;"
  loop:
    - lock
    - lock-frontend

- name: Install auditd package
  become: true
  apt:
    name: "{{ auditd_package_name }}"
    state: present

- name: Wait for apt lock
  become: true
  shell: "while fuser /var/lib/dpkg/{{ item }} >/dev/null 2>&1; do sleep 5; done;"
  loop:
    - lock
    - lock-frontend

- name: Install audispd-plugins package
  become: true
  apt:
    name: "{{ audispd_plugins_package_name }}"
    state: present

- name: Copy auditd.conf configuration files
  become: true
  template:
    src: auditd.conf.j2
    dest: /etc/audit/audit.conf
    mode: 0640
  notify: Restart auditd service

- name: Adjust auditd/audispd configurations
  become: true
  lineinfile:
    dest: "{{ item.config }}"
    regexp: '^#?{{ item.parameter }}\s*='
    line: "{{ item.parameter }} = {{ item.value }}"
    mode: 0640
  with_items: "{{ auditd_config }}"
  notify: Restart auditd service

- name: Deploy rules for auditd
  become: true
  template:
    src: "rules/{{ item }}.j2"
    dest: "{{ auditd_rules_path }}/{{ item }}"
    owner: root
    group: root
    mode: 0644
    backup: "{{ auditd_backup }}"
  loop: "{{ auditd_rules_files }}"
  notify: Generate auditd rules

- name: Start/enable auditd service
  become: true
  service:
    name: "{{ auditd_service_name }}"
    state: started
    enabled: true

- name: List existing rules files
  become: true
  command: "find {{ auditd_rules_path }} -type f -printf '%f\n'"
  changed_when: false
  register: auditd_existing_rules

- name: Remove unmanaged rules files
  become: true
  file:
    dest: "{{ auditd_rules_path }}/{{ item }}"
    state: absent
  when:
    - item not in auditd_rules_files
    - item != 'osas-auditd-rhel7.rules'
  loop: "{{ auditd_existing_rules.stdout_lines | default([]) }}"
  notify: Generate auditd rules
