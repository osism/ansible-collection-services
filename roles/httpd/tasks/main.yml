---
- name: Create required directories
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0750
  loop:
    - "{{ httpd_configuration_directory }}"
    - "{{ httpd_docker_compose_directory }}"

- name: Create data directories
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0755
  loop:
    - "{{ httpd_data_directory }}"

- name: Run data container
  community.docker.docker_container:
    name: httpd-data
    image: "{{ httpd_data_image }}"
    env:
      USER_ID: "{{ httpd_data_uid }}"
      GROUP_ID: "{{ httpd_data_gid }}"
    volumes:
      - "{{ httpd_data_directory }}:/export"
    state: started
  when: httpd_data_enable | bool

- name: Include ironic tasks
  ansible.builtin.include_tasks: ironic.yml
  when: httpd_ironic_enable | bool

- name: Include sonic-ztp tasks
  ansible.builtin.include_tasks: sonic-ztp.yml
  when: httpd_sonic_ztp_enable | bool

- name: Copy httpd.conf file
  ansible.builtin.template:
    src: httpd.conf.j2
    dest: "{{ httpd_configuration_directory }}/httpd.conf"
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0644
  notify: Restart httpd service

- name: Copy docker-compose.yml file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ httpd_docker_compose_directory }}/docker-compose.yml"
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0640
  notify: Restart httpd service

- name: Manage httpd service
  become: true
  ansible.builtin.service:
    name: "{{ httpd_service_name }}"
    state: started
    enabled: true
  register: result

- name: Set _httpd_service_restart fact
  ansible.builtin.set_fact:  # noqa: no-handler
    _httpd_service_restart: False
  when: result.changed | bool
