---
- name: Remove old architecture-dependent repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [ arch=amd64 ] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: absent
    filename: docker
  when: docker_configure_repository|bool

- name: Gather the apt package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Check whether packages are installed that should not be installed
  ansible.builtin.fail:
    msg: "{{ ansible_facts.packages[item] | length }} versions of {{ item }} are installed!"
  when: "item in ansible_facts.packages"
  loop: "{{ containerd_packages_fail }}"

- name: Install apt-transport-https package
  become: true
  ansible.builtin.apt:
    name: apt-transport-https
    state: present
    lock_timeout: "{{ apt_lock_timeout | default(300) }}"
  when: docker_configure_repository|bool
  changed_when: false

- name: Add repository gpg key with apt-key
  become: true
  ansible.builtin.apt_key:
    url: "{{ docker_debian_repository_key }}"
  when:
    - docker_configure_repository|bool
    - ansible_distribution_version is version('22.04', '<')

- name: Add repository gpg key
  become: true
  ansible.builtin.get_url:
    url: "{{ docker_debian_repository_key }}"
    dest: /etc/apt/trusted.gpg.d/docker.asc
    mode: 0644
    owner: root
    group: root
  when:
    - docker_configure_repository|bool
    - ansible_distribution_version is version('22.04', '>=')

- name: Add repository
  become: true
  ansible.builtin.apt_repository:
    repo: "{{ docker_debian_repository }}"
    state: present
    filename: docker
    update_cache: true
    mode: 0644
  when: docker_configure_repository|bool

- name: Unlock containerd package
  become: true
  ansible.builtin.dpkg_selections:
    name: "{{ containerd_package_name }}"
    selection: install
  when: containerd_package_name in ansible_facts.packages
  tags: molecule-idempotence-notest

# NOTE: At this point the last available version of containerd should be installed
- name: Install containerd package
  become: true
  ansible.builtin.apt:
    name: "{{ containerd_package_name }}"
    state: latest
    lock_timeout: "{{ apt_lock_timeout | default(300) }}"

- name: Lock containerd package
  become: true
  ansible.builtin.dpkg_selections:
    name: "{{ containerd_package_name }}"
    selection: hold
  tags: molecule-idempotence-notest
