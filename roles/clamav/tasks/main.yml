---
- name: Gather variables for each operating system
  ansible.builtin.include_vars: "{{ ansible_os_family }}-family.yml"

- name: Include distribution specific install tasks
  ansible.builtin.include_tasks: "install-{{ ansible_os_family }}-family.yml"

- name: Update configuration
  become: true
  ansible.builtin.lineinfile:
    path: "{{ clamav_configuration_path }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line | default('') }}"
    state: "{{ item.state | default('present') }}"
    mode: 0644
    create: true
  with_items: "{{ clamav_configuration }}"
  notify: Restart clamav daemon service

- name: Include initialize tasks
  ansible.builtin.include_tasks: initialize.yml
  tags: initialize
  when: not ansible_local.osism.clamav.status | default("False") | bool

- name: Start/enable clamav freshclam service
  become: true
  ansible.builtin.service:
    name: "{{ clamav_freshclam_service_name }}"
    state: started
    enabled: true

- name: Find clamav definition files
  ansible.builtin.find:
    paths: /var/lib/clamav/
    patterns: "*.cvd"
  register: find_results

- name: Update clamav definition files permissions
  become: true
  ansible.builtin.file:
    path: "{{ item['path'] }}"
    mode: u+r,g+r,o+r
  with_items: "{{ find_results['files'] }}"

- name: Start/enable clamav daemon service
  become: true
  ansible.builtin.service:
    name: "{{ clamav_daemon_service_name }}"
    state: started
    enabled: true
