---
name: Test role {{ ansible_role }}

"on":
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/test-role-{{ ansible_role }}.yml'
      - 'molecule/{{ molecule_scenario }}/*'
      - 'molecule/{{ ansible_role }}/**'
      - 'roles/{{ ansible_role }}/**'
  pull_request:
    paths:
      - '.github/workflows/test-role-{{ ansible_role }}.yml'
      - 'molecule/{{ molecule_scenario }}/*'
      - 'molecule/{{ ansible_role }}/**'
      - 'roles/{{ ansible_role }}/**'

jobs:
  test-role-{{ ansible_role }}:

    runs-on: ubuntu-latest

    env:
      ANSIBLE_ROLE: {{ ansible_role }}

    strategy:
      max-parallel: 4
      matrix:
        ansible-version: {{ ansible_versions }}
        python-version: {{ python_versions }}
        docker-image: {{ docker_images }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ '{{' }} matrix.python-version {{ '}}' }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      # NOTE: Technically, Molecule supports variable interpolation in molecule.yml.
      #       For reasons that are not really comprehensible, however, it does not
      #       work here. Hence this workaround.
      - name: Prepare molecule.yml
        run: |
          sed -i "s/\${DOCKER_IMAGE}/${{ '{{' }} matrix.docker-image {{ '}}' }}/g" molecule/{{ molecule_scenario }}/molecule.yml
          sed -i "s/\${ANSIBLE_ROLE}/${{ '{{' }} env.ANSIBLE_ROLE {{ '}}' }}/g" molecule/{{ molecule_scenario }}/molecule.yml
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r molecule/requirements.txt
          python3 -m pip install ansible~=${{ '{{' }} matrix.ansible-version {{ '}}' }}
      - name: Run molecule
        run: molecule test -s {{ molecule_scenario }}
      - name: Cleanup molecule
        run: molecule destroy -s {{ molecule_scenario }}
        if: ${{ '{{' }} always() {{ '}}' }}
